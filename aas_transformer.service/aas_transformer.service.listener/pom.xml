<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>de.fhg.ipa</groupId>
        <artifactId>aas_transformer.service</artifactId>
        <version>${revision}</version>
    </parent>

    <artifactId>aas_transformer.service.listener</artifactId>

    <properties>
        <maven.compiler.source>18</maven.compiler.source>
        <maven.compiler.target>18</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <docker.image.name>listener</docker.image.name>
        <docker.image.skip>false</docker.image.skip>
    </properties>

    <dependencies>
        <!-- SPRING -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <!-- SPRING DOC -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc.openapi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
            <version>${springdoc.openapi.version}</version>
        </dependency>

        <!-- HTTP !-->
        <!-- Java REST Jersey client (for WebServiceRawClient) -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
            <version>2.40</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>2.40</version>
        </dependency>

        <!-- Jersey InjectionManager (for Jersey client)  -->
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>2.40</version>
        </dependency>

        <!-- MQTT !-->
        <dependency>
            <groupId>org.eclipse.paho</groupId>
            <artifactId>org.eclipse.paho.mqttv5.client</artifactId>
            <version>1.2.5</version>
        </dependency>

        <!-- BASYX !-->
        <dependency>
            <groupId>org.eclipse.digitaltwin.basyx</groupId>
            <artifactId>basyx.aasrepository-client</artifactId>
            <version>${basyx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.digitaltwin.basyx</groupId>
            <artifactId>basyx.aasrepository-client</artifactId>
            <version>${basyx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.digitaltwin.basyx</groupId>
            <artifactId>basyx.submodelrepository-client</artifactId>
            <version>${basyx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.digitaltwin.basyx</groupId>
            <artifactId>basyx.aasregistry-client-native</artifactId>
            <version>${basyx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.digitaltwin.basyx</groupId>
            <artifactId>basyx.submodelregistry-client-native</artifactId>
            <version>${basyx.version}</version>
        </dependency>

        <!-- JSON PARSER-->
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
        </dependency>

        <!-- SHARED !-->
        <dependency>
            <groupId>de.fhg.ipa</groupId>
            <artifactId>aas_transformer.model</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>de.fhg.ipa</groupId>
            <artifactId>aas_transformer.aas</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>de.fhg.ipa</groupId>
            <artifactId>aas_transformer.clients.management</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>de.fhg.ipa</groupId>
            <artifactId>aas_transformer.clients.redis</artifactId>
            <version>${revision}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>de.fhg.ipa</groupId>
            <artifactId>aas_transformer.transformation</artifactId>
            <version>${revision}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>de.fhg.ipa</groupId>
            <artifactId>aas_transformer.open_api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- TESTING -->
        <dependency>
            <groupId>de.fhg.ipa</groupId>
            <artifactId>aas_transformer.test.utils</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mariadb</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${restassured.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-xml</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.wiremock.integrations</groupId>
            <artifactId>wiremock-spring-boot</artifactId>
            <version>3.3.0</version>
        </dependency>

        <dependency>
            <groupId>com.redis</groupId>
            <artifactId>testcontainers-redis</artifactId>
            <version>2.2.2</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!-- Spring Boot !-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${maven.plugin.spring.boot.version}</version>
                <configuration>
                    <compilerArguments>-parameters</compilerArguments>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                            <goal>build-info</goal>
                        </goals>
                        <configuration>
                            <classifier>exec</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Compilation !-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${maven.plugin.codehaus.exec.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>de.fhg.ipa.aas_transformer.service.listener.Application</mainClass>
                </configuration>
            </plugin>
            <!-- Docker Image !-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>